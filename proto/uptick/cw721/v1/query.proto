syntax = "proto3";
package uptick.cw721.v1;

import "cosmos/base/query/v1beta1/pagination.proto";
import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "uptick/cw721/v1/cw721.proto";
import "uptick/cw721/v1/genesis.proto";

option go_package = "github.com/UptickNetwork/wasm-nft-convert/cw721/types";

// Query defines the gRPC querier service.
service Query {
  // TokenPairs retrieves registered token pairs
  rpc TokenPairs(QueryTokenPairsRequest) returns (QueryTokenPairsResponse) {
    option (google.api.http).get = "/uptick/cw721/v1/token_pairs";
  }

  // TokenPair retrieves a registered token pair
  rpc TokenPair(QueryTokenPairRequest) returns (QueryTokenPairResponse) {
    option (google.api.http).get = "/uptick/cw721/v1/token_pairs/{token}";
  }

  // WasmContract retrieves a registered wasm contract
  rpc WasmContract(QueryWasmAddressRequest) returns (QueryWasmContractResponse) {
    option (google.api.http).get = "/uptick/erc721/v1/wasm_contract/{port}/{channel}/{class_id}";
  }

  // Params retrieves the cw721 module params
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/uptick/cw721/v1/params";
  }
}

// QueryTokenPairsRequest is the request type for the Query/TokenPairs RPC
// method.
message QueryTokenPairsRequest {
  // pagination defines an optional pagination for the request.
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

// QueryTokenPairsResponse is the response type for the Query/TokenPairs RPC
// method.
message QueryTokenPairsResponse {
  repeated TokenPair token_pairs = 1 [(gogoproto.nullable) = false];
  // pagination defines the pagination in the response.
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// QueryTokenPairRequest is the request type for the Query/TokenPair RPC method.
message QueryTokenPairRequest {
  // token identifier can be either the hex contract address of the CW721 or
  // the Cosmos nft classID
  string token = 1;
}

// QueryTokenPairRequest is the request type for the Query/TokenPair RPC method.
message QueryWasmAddressRequest {
  // token identifier can be either the hex contract address of the ERC721 or
  // the Cosmos nft classID
  string port = 1;
  string channel = 2;
  string class_id = 3;
}

// QueryTokenPairResponse is the response type for the Query/TokenPair RPC
// method.
message QueryTokenPairResponse {
  TokenPair token_pair = 1 [(gogoproto.nullable) = false];
}

// QueryParamsRequest is the request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is the response type for the Query/Params RPC
// method.
message QueryParamsResponse {
  Params params = 1 [(gogoproto.nullable) = false];
}

// QueryWasmContractResponse is the response type for the Query/WasmContract RPC method.
message QueryWasmContractResponse {
  TokenPair token_pair = 1 [(gogoproto.nullable) = false];
}
