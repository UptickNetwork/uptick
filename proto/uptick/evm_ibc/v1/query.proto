syntax = "proto3";
package uptick.evm_ibc.v1;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "uptick/evm_ibc/v1/evm_ibc.proto";

option go_package = "github.com/UptickNetwork/uptick/x/evmIBC/types";

// Query defines the gRPC queried service.
service Query {
  // EvmContract retrieves a registered evm contract
  rpc EvmContract(QueryEvmAddressRequest) returns (QueryTokenPairResponse) {
    option (google.api.http).get = "/uptick/evmIBC/v1/evm_contract/{port}/{channel}/{class_id}";
  }
}

// QueryEvmAddressRequest is the request type for the Query/TokenPair RPC method.
message QueryEvmAddressRequest {
  // token identifier can be either the hex contract address of the ERC721 or
  // the Cosmos nft classID
  string port = 1;
  string channel = 2;
  string class_id = 3;
}

// QueryTokenPairResponse is the response type for the Query/TokenPair RPC
// method.
message QueryTokenPairResponse {
  TokenPair token_pair = 1 [(gogoproto.nullable) = false];
}
